{"version":3,"sources":["webpack:///./node_modules/vuetify/lib/components/VDivider/VDivider.js","webpack:///./src/views/About.vue?0464","webpack:///src/views/About.vue","webpack:///./src/views/About.vue?05d2","webpack:///./src/views/About.vue","webpack:///./src/assets/timeline.svg"],"names":["extend","name","props","inset","Boolean","vertical","h","orientation","this","$attrs","role","class","themeClasses","attrs","on","$listeners","render","_vm","_h","$createElement","_c","_self","staticClass","_v","staticStyle","staticRenderFns","component","VDivider","VImg","module","exports"],"mappings":"gIAAA,0BAIe,cAAUA,OAAO,CAC9BC,KAAM,YACNC,MAAO,CACLC,MAAOC,QACPC,SAAUD,SAGZ,OAAOE,GAEL,IAAIC,EAMJ,OAJKC,KAAKC,OAAOC,MAA6B,cAArBF,KAAKC,OAAOC,OACnCH,EAAcC,KAAKH,SAAW,WAAa,cAGtCC,EAAE,KAAM,CACbK,MAAO,CACL,aAAa,EACb,mBAAoBH,KAAKL,MACzB,sBAAuBK,KAAKH,YACzBG,KAAKI,cAEVC,MAAO,CACLH,KAAM,YACN,mBAAoBH,KACjBC,KAAKC,QAEVK,GAAIN,KAAKO,iB,yCC/Bf,IAAIC,EAAS,WAAa,IAAIC,EAAIT,KAASU,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,0BAA0B,CAACL,EAAIM,GAAG,sBAAsBH,EAAG,MAAM,CAACE,YAAY,eAAe,CAACF,EAAG,MAAM,CAACE,YAAY,aAAa,CAACL,EAAIM,GAAG,aAAaH,EAAG,YAAY,CAACI,YAAY,CAAC,YAAY,WAAWJ,EAAG,MAAM,CAACI,YAAY,CAAC,gBAAgB,SAAS,CAACP,EAAIM,GAAG,uNAAuNH,EAAG,MAAM,CAACE,YAAY,aAAa,CAACL,EAAIM,GAAG,cAAcH,EAAG,YAAY,CAACI,YAAY,CAAC,YAAY,WAAWJ,EAAG,MAAM,CAACI,YAAY,CAAC,gBAAgB,SAAS,CAACP,EAAIM,GAAG,yTAAyTH,EAAG,MAAM,CAACE,YAAY,aAAa,CAACL,EAAIM,GAAG,gBAAgBH,EAAG,YAAY,CAACI,YAAY,CAAC,YAAY,WAAWJ,EAAG,MAAM,CAACI,YAAY,CAAC,gBAAgB,SAAS,CAACP,EAAIM,GAAG,8PAA8PH,EAAG,MAAM,CAACE,YAAY,aAAa,CAACL,EAAIM,GAAG,qBAAqBH,EAAG,YAAY,CAACI,YAAY,CAAC,YAAY,WAAWJ,EAAG,MAAM,CAACA,EAAG,QAAQ,CAACP,MAAM,CAAC,IAAM,EAAQ,YAA8B,IAAI,MACzpDY,EAAkB,GCiCP,GACb,OACE,MAAO,KCpCmO,I,yDCO1OC,EAAY,eACd,EACAV,EACAS,GACA,EACA,KACA,KACA,MAIa,aAAAC,EAAiB,QAMhC,IAAkBA,EAAW,CAACC,WAAA,KAASC,OAAA,Q,qBCxBvCC,EAAOC,QAAU,IAA0B","file":"js/about.abee18c1.js","sourcesContent":["// Styles\nimport \"../../../src/components/VDivider/VDivider.sass\"; // Mixins\n\nimport Themeable from '../../mixins/themeable';\nexport default Themeable.extend({\n  name: 'v-divider',\n  props: {\n    inset: Boolean,\n    vertical: Boolean\n  },\n\n  render(h) {\n    // WAI-ARIA attributes\n    let orientation;\n\n    if (!this.$attrs.role || this.$attrs.role === 'separator') {\n      orientation = this.vertical ? 'vertical' : 'horizontal';\n    }\n\n    return h('hr', {\n      class: {\n        'v-divider': true,\n        'v-divider--inset': this.inset,\n        'v-divider--vertical': this.vertical,\n        ...this.themeClasses\n      },\n      attrs: {\n        role: 'separator',\n        'aria-orientation': orientation,\n        ...this.$attrs\n      },\n      on: this.$listeners\n    });\n  }\n\n});\n//# sourceMappingURL=VDivider.js.map","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"display-3 center-title\"},[_vm._v(\"Project Overview\")]),_c('div',{staticClass:\"update-text\"},[_c('div',{staticClass:\"display-1\"},[_vm._v(\"Preface\")]),_c('v-divider',{staticStyle:{\"max-width\":\"150px\"}}),_c('div',{staticStyle:{\"margin-bottom\":\"20px\"}},[_vm._v(\"\\n      StyleBlit (2018) is a realtime “example-based style transfer” algorithm that applies patches of stochastic textures to meshes based on a local guidance channel, such as surface normals or depth. \\n    \")]),_c('div',{staticClass:\"display-1\"},[_vm._v(\"Proposal\")]),_c('v-divider',{staticStyle:{\"max-width\":\"150px\"}}),_c('div',{staticStyle:{\"margin-bottom\":\"20px\"}},[_vm._v(\"\\n      We propose the application of this stylization algorithm to deformable meshes. Based on the amount of deformation, measured by guidance channel differences, a stochastic texture is applied to deformed areas of the mesh. As additional deformations occur, texture modifications will accumulate. \\n    \")]),_c('div',{staticClass:\"display-1\"},[_vm._v(\"Tech Stack\")]),_c('v-divider',{staticStyle:{\"max-width\":\"150px\"}}),_c('div',{staticStyle:{\"margin-bottom\":\"20px\"}},[_vm._v(\"\\n      The system will be implemented in Unity (C#, C++, HLSL variant) and target interactive performance. If need be, we'll explore implementing our softbody physics in another language and importing that work into Unity through a DLL file.\\n    \")]),_c('div',{staticClass:\"display-1\"},[_vm._v(\"Target Timeline\")]),_c('v-divider',{staticStyle:{\"max-width\":\"150px\"}}),_c('div',[_c('v-img',{attrs:{\"src\":require(\"../assets/timeline.svg\")}})],1)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <div class=\"display-3 center-title\">Project Overview</div>\r\n    <div class=\"update-text\">\r\n      <div class=\"display-1\">Preface</div>\r\n      <v-divider style=\"max-width: 150px\"/>\r\n      <div style=\"margin-bottom: 20px;\">\r\n        StyleBlit (2018) is a realtime “example-based style transfer” algorithm that applies patches of stochastic textures to meshes based on a local guidance channel, such as surface normals or depth. \r\n      </div>\r\n      \r\n      <div class=\"display-1\">Proposal</div>\r\n      <v-divider style=\"max-width: 150px\"/>\r\n      <div style=\"margin-bottom: 20px;\">\r\n        We propose the application of this stylization algorithm to deformable meshes. Based on the amount of deformation, measured by guidance channel differences, a stochastic texture is applied to deformed areas of the mesh. As additional deformations occur, texture modifications will accumulate. \r\n      </div>\r\n\r\n      <div class=\"display-1\">Tech Stack</div>\r\n      <v-divider style=\"max-width: 150px\"/>\r\n      <div style=\"margin-bottom: 20px;\">\r\n        The system will be implemented in Unity (C#, C++, HLSL variant) and target interactive performance. If need be, we'll explore implementing our softbody physics in another language and importing that work into Unity through a DLL file.\r\n      </div>\r\n\r\n      <div class=\"display-1\">Target Timeline</div>\r\n      <v-divider style=\"max-width: 150px\"/>\r\n      <div>\r\n        <v-img src=\"../assets/timeline.svg\"/>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n\r\n    };\r\n  }\r\n};\r\n</script>\r\n","import mod from \"-!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./About.vue?vue&type=template&id=acec4fdc&\"\nimport script from \"./About.vue?vue&type=script&lang=js&\"\nexport * from \"./About.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VDivider } from 'vuetify/lib/components/VDivider';\nimport { VImg } from 'vuetify/lib/components/VImg';\ninstallComponents(component, {VDivider,VImg})\n","module.exports = __webpack_public_path__ + \"img/timeline.9d505dc6.svg\";"],"sourceRoot":""}